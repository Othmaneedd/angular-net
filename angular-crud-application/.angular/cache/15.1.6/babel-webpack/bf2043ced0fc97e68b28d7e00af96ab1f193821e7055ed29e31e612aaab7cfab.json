{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UsersListComponent = class UsersListComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.Users = [];\n    this.searchText = '';\n    this.sortColumn = '';\n    this.sortDirection = 'asc';\n    // Pagination\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n  }\n  ngOnInit() {\n    this.crudService.GetUsers().subscribe(res => {\n      this.Users = res;\n    });\n  }\n  delete(id, i) {\n    if (window.confirm('Do you want to go ahead?')) {\n      this.crudService.deleteUser(id).subscribe(() => {\n        this.Users.splice(i, 1);\n      });\n    }\n  }\n  sortBy(column) {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n  }\n  get paginatedUsers() {\n    let filtered = this.Users.filter(user => Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase()));\n    if (this.sortColumn) {\n      filtered = filtered.sort((a, b) => {\n        const aVal = a[this.sortColumn]?.toString().toLowerCase();\n        const bVal = b[this.sortColumn]?.toString().toLowerCase();\n        return this.sortDirection === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);\n      });\n    }\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    return filtered.slice(start, start + this.itemsPerPage);\n  }\n  get totalPages() {\n    const filteredLength = this.Users.filter(user => Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase())).length;\n    return Math.ceil(filteredLength / this.itemsPerPage);\n  }\n  changePage(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  }\n};\nUsersListComponent = __decorate([Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})], UsersListComponent);\nexport { UsersListComponent };","map":{"version":3,"mappings":"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","names":["Component","UsersListComponent","constructor","crudService","ngOnInit","GetUsers","subscribe","res","Users","delete","id","i","window","confirm","deleteUser","splice","sortBy","column","sortColumn","sortDirection","paginatedUsers","filtered","filter","user","Object","values","join","toLowerCase","includes","searchText","sort","a","b","aVal","toString","bVal","localeCompare","start","currentPage","itemsPerPage","slice","totalPages","filteredLength","length","Math","ceil","changePage","page","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../../service/crud.service';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n  Users: any[] = [];\r\n  searchText = '';\r\n  sortColumn = '';\r\n  sortDirection: 'asc' | 'desc' = 'asc';\r\n\r\n  // Pagination\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n\r\n  constructor(private crudService: CrudService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.crudService.GetUsers().subscribe((res: any) => {\r\n      this.Users = res;\r\n    });\r\n  }\r\n\r\n  delete(id: any, i: any) {\r\n    if (window.confirm('Do you want to go ahead?')) {\r\n      this.crudService.deleteUser(id).subscribe(() => {\r\n        this.Users.splice(i, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  sortBy(column: string) {\r\n    if (this.sortColumn === column) {\r\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortColumn = column;\r\n      this.sortDirection = 'asc';\r\n    }\r\n  }\r\n\r\n  get paginatedUsers() {\r\n    let filtered = this.Users\r\n      .filter(user =>\r\n        Object.values(user)\r\n          .join(' ')\r\n          .toLowerCase()\r\n          .includes(this.searchText.toLowerCase())\r\n      );\r\n\r\n    if (this.sortColumn) {\r\n      filtered = filtered.sort((a, b) => {\r\n        const aVal = a[this.sortColumn]?.toString().toLowerCase();\r\n        const bVal = b[this.sortColumn]?.toString().toLowerCase();\r\n        return this.sortDirection === 'asc'\r\n          ? aVal.localeCompare(bVal)\r\n          : bVal.localeCompare(aVal);\r\n      });\r\n    }\r\n\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    return filtered.slice(start, start + this.itemsPerPage);\r\n  }\r\n\r\n  get totalPages() {\r\n    const filteredLength = this.Users.filter(user =>\r\n      Object.values(user)\r\n        .join(' ')\r\n        .toLowerCase()\r\n        .includes(this.searchText.toLowerCase())\r\n    ).length;\r\n    return Math.ceil(filteredLength / this.itemsPerPage);\r\n  }\r\n\r\n  changePage(page: number) {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}