{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SortPipe {\n  transform(array, column, direction) {\n    if (!array || !column || !direction) return array;\n    return array.sort((a, b) => {\n      const aVal = a[column]?.toString().toLowerCase();\n      const bVal = b[column]?.toString().toLowerCase();\n      if (aVal < bVal) return direction === 'asc' ? -1 : 1;\n      if (aVal > bVal) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }\n}\nSortPipe.ɵfac = function SortPipe_Factory(t) {\n  return new (t || SortPipe)();\n};\nSortPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"sort\",\n  type: SortPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,QAAQ;EACnBC,SAAS,CAACC,KAAY,EAAEC,MAAc,EAAEC,SAAiB;IACvD,IAAI,CAACF,KAAK,IAAI,CAACC,MAAM,IAAI,CAACC,SAAS,EAAE,OAAOF,KAAK;IAEjD,OAAOA,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACzB,MAAMC,IAAI,GAAGF,CAAC,CAACH,MAAM,CAAC,EAAEM,QAAQ,EAAE,CAACC,WAAW,EAAE;MAChD,MAAMC,IAAI,GAAGJ,CAAC,CAACJ,MAAM,CAAC,EAAEM,QAAQ,EAAE,CAACC,WAAW,EAAE;MAEhD,IAAIF,IAAI,GAAGG,IAAI,EAAE,OAAOP,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACpD,IAAII,IAAI,GAAGG,IAAI,EAAE,OAAOP,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACpD,OAAO,CAAC;IACV,CAAC,CAAC;EACJ;;;mBAZWJ,QAAQ;AAAA;;;QAARA,QAAQ;EAAAY;AAAA","names":["SortPipe","transform","array","column","direction","sort","a","b","aVal","toString","toLowerCase","bVal","pure"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\pipes\\sort.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'sort'\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(array: any[], column: string, direction: string): any[] {\r\n    if (!array || !column || !direction) return array;\r\n\r\n    return array.sort((a, b) => {\r\n      const aVal = a[column]?.toString().toLowerCase();\r\n      const bVal = b[column]?.toString().toLowerCase();\r\n\r\n      if (aVal < bVal) return direction === 'asc' ? -1 : 1;\r\n      if (aVal > bVal) return direction === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}