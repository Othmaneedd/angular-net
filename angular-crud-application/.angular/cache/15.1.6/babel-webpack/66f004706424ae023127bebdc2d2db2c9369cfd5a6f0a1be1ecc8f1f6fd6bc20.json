{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = 'https://localhost:5001/api/users'; // adapte selon ton API\n  }\n\n  GetUsers() {\n    return this.httpClient.get(`${this.API}`);\n  }\n  AddUser(data) {\n    return this.httpClient.post(`${this.API}`, data);\n  }\n  updateUser(id, data) {\n    return this.httpClient.put(`${this.API}/${id}`, data);\n  }\n  deleteUser(id) {\n    return this.httpClient.delete(`${this.API}/${id}`);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,QAAG,GAAW,kCAAkC,CAAC,CAAC;EAEL;;EAE7CC,QAAQ;IACN,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,GAAG,EAAE,CAAC;EAC3C;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,GAAG,EAAE,EAAEE,IAAI,CAAC;EAClD;EAEAE,UAAU,CAACC,EAAU,EAAEH,IAAS;IAC9B,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,GAAG,IAAIK,EAAE,EAAE,EAAEH,IAAI,CAAC;EACvD;EAEAK,UAAU,CAACF,EAAU;IACnB,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,GAAG,IAAIK,EAAE,EAAE,CAAC;EACpD;;;mBAnBWV,WAAW;AAAA;;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["CrudService","constructor","httpClient","GetUsers","get","API","AddUser","data","post","updateUser","id","put","deleteUser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\service\\crud.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n  API: string = 'https://localhost:5001/api/users'; // adapte selon ton API\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  GetUsers() {\r\n    return this.httpClient.get(`${this.API}`);\r\n  }\r\n\r\n  AddUser(data: any) {\r\n    return this.httpClient.post(`${this.API}`, data);\r\n  }\r\n\r\n  updateUser(id: number, data: any) {\r\n    return this.httpClient.put(`${this.API}/${id}`, data);\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.httpClient.delete(`${this.API}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}