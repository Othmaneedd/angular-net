{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/crud.service\";\nimport * as i3 from \"@angular/common\";\nfunction UserViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"h4\");\n    i0.ɵɵtext(4, \"D\\u00E9tails de l'utilisateur\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"p\")(7, \"strong\");\n    i0.ɵɵtext(8, \"Pr\\u00E9nom :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\")(11, \"strong\");\n    i0.ɵɵtext(12, \"Nom :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Email :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 6)(19, \"button\", 7);\n    i0.ɵɵtext(20, \"\\u2190 Retour\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.firstName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.lastName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.email, \"\");\n  }\n}\nfunction UserViewComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Chargement...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UserViewComponent {\n  constructor(route, crudService) {\n    this.route = route;\n    this.crudService = crudService;\n  }\n  ngOnInit() {\n    const userId = this.route.snapshot.paramMap.get('id');\n    if (userId) {\n      this.crudService.GetUser(userId).subscribe(res => {\n        this.user = res;\n      });\n    }\n  }\n}\nUserViewComponent.ɵfac = function UserViewComponent_Factory(t) {\n  return new (t || UserViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CrudService));\n};\nUserViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserViewComponent,\n  selectors: [[\"app-user-view\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container mt-5\", 4, \"ngIf\"], [\"class\", \"text-center mt-5\", 4, \"ngIf\"], [1, \"container\", \"mt-5\"], [1, \"card\", \"shadow-sm\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [1, \"card-footer\", \"text-end\"], [\"routerLink\", \"/users-list\", 1, \"btn\", \"btn-secondary\"], [1, \"text-center\", \"mt-5\"], [1, \"spinner-border\", \"text-primary\"]],\n  template: function UserViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UserViewComponent_div_0_Template, 21, 3, \"div\", 0);\n      i0.ɵɵtemplate(1, UserViewComponent_div_1_Template, 4, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.user);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAAAA,8BAAyC;IAG7BA,6CAAwB;IAAAA,iBAAK;IAEnCA,8BAAuB;IACVA,6BAAQ;IAAAA,iBAAS;IAACA,YAAoB;IAAAA,iBAAI;IACrDA,0BAAG;IAAQA,sBAAK;IAAAA,iBAAS;IAACA,aAAmB;IAAAA,iBAAI;IACjDA,0BAAG;IAAQA,wBAAO;IAAAA,iBAAS;IAACA,aAAgB;IAAAA,iBAAI;IAElDA,+BAAkC;IAC2BA,8BAAQ;IAAAA,iBAAS;;;;IAL/CA,eAAoB;IAApBA,qDAAoB;IACvBA,eAAmB;IAAnBA,oDAAmB;IACjBA,eAAgB;IAAhBA,iDAAgB;;;;;IAQlDA,8BAA4C;IAC1CA,yBAA+C;IAC/CA,yBAAG;IAAAA,6BAAa;IAAAA,iBAAI;;;ACTxB,OAAM,MAAOC,iBAAiB;EAG5BC,YACUC,KAAqB,EACrBC,WAAwB;IADxB,UAAK,GAALD,KAAK;IACL,gBAAW,GAAXC,WAAW;EAClB;EAEHC,QAAQ;IACN,MAAMC,MAAM,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAIH,MAAM,EAAE;MACV,IAAI,CAACF,WAAW,CAACM,OAAO,CAACJ,MAAM,CAAC,CAACK,SAAS,CAACC,GAAG,IAAG;QAC/C,IAAI,CAACC,IAAI,GAAGD,GAAG;MACjB,CAAC,CAAC;;EAEN;;;mBAfWX,iBAAiB;AAAA;;QAAjBA,iBAAiB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT9BlB,mEAcQ;MAENA,kEAGM;;;MAnBqBA,+BAAU;MAgBNA,eAAW;MAAXA,gCAAW","names":["i0","UserViewComponent","constructor","route","crudService","ngOnInit","userId","snapshot","paramMap","get","GetUser","subscribe","res","user","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\user-view\\user-view.component.html","C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\user-view\\user-view.component.ts"],"sourcesContent":["<div class=\"container mt-5\" *ngIf=\"user\">\n    <div class=\"card shadow-sm\">\n      <div class=\"card-header bg-primary text-white\">\n        <h4>Détails de l'utilisateur</h4>\n      </div>\n      <div class=\"card-body\">\n        <p><strong>Prénom :</strong> {{ user.firstName }}</p>\n        <p><strong>Nom :</strong> {{ user.lastName }}</p>\n        <p><strong>Email :</strong> {{ user.email }}</p>\n      </div>\n      <div class=\"card-footer text-end\">\n        <button class=\"btn btn-secondary\" routerLink=\"/users-list\">← Retour</button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"text-center mt-5\" *ngIf=\"!user\">\n    <div class=\"spinner-border text-primary\"></div>\n    <p>Chargement...</p>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CrudService } from '../../service/crud.service';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.scss']\n})\nexport class UserViewComponent implements OnInit {\n  user: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private crudService: CrudService\n  ) {}\n\n  ngOnInit(): void {\n    const userId = this.route.snapshot.paramMap.get('id');\n    if (userId) {\n      this.crudService.GetUser(userId).subscribe(res => {\n        this.user = res;\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}