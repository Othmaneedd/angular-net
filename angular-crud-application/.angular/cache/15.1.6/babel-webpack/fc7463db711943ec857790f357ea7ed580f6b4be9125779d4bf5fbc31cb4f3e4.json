{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/crud.service\";\nexport class UserDetailComponent {\n  constructor(formBuilder, router, ngZone, activatedRoute, crudService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.ngZone = ngZone;\n    this.activatedRoute = activatedRoute;\n    this.crudService = crudService;\n    this.getId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.crudService.GetUser(this.getId).subscribe(res => {\n      this.updateForm.setValue({\n        firstName: res['firstName'],\n        lastName: res['lastName'],\n        email: res['email']\n      });\n    });\n    this.updateForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      email: ['']\n    });\n  }\n  ngOnInit() {}\n  onUpdate() {\n    this.crudService.updateUser(this.getId, this.updateForm.value).subscribe(() => {\n      console.log('Data updated successfully!');\n      this.ngZone.run(() => this.router.navigateByUrl('/users-list'));\n    }, err => {\n      console.log(err);\n    });\n  }\n}\nUserDetailComponent.ɵfac = function UserDetailComponent_Factory(t) {\n  return new (t || UserDetailComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CrudService));\n};\nUserDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserDetailComponent,\n  selectors: [[\"app-user-detail\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function UserDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UserDetailComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n      i0.ɵɵtext(9, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"button\", 7);\n      i0.ɵɵtext(18, \"Update\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,mBAAmB;EAI9BC,YACSC,WAAwB,EACvBC,MAAc,EACdC,MAAc,EACdC,cAA8B,EAC9BC,WAAwB;IAJzB,gBAAW,GAAXJ,WAAW;IACV,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,gBAAW,GAAXC,WAAW;IAEnB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,cAAc,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAE5D,IAAI,CAACJ,WAAW,CAACK,OAAO,CAAC,IAAI,CAACJ,KAAK,CAAC,CAACK,SAAS,CAAEC,GAA0B,IAAI;MAC5E,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC;QACvBC,SAAS,EAAEH,GAAG,CAAC,WAAW,CAAC;QAC3BI,QAAQ,EAAEJ,GAAG,CAAC,UAAU,CAAC;QACzBK,KAAK,EAAEL,GAAG,CAAC,OAAO;OACnB,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACZ,WAAW,CAACiB,KAAK,CAAC;MACvCH,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;EACJ;EAEAE,QAAQ,IAAI;EAEZC,QAAQ;IACN,IAAI,CAACf,WAAW,CAACgB,UAAU,CAAC,IAAI,CAACf,KAAK,EAAE,IAAI,CAACO,UAAU,CAACS,KAAK,CAAC,CAACX,SAAS,CACtE,MAAK;MACHY,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,IAAI,CAACrB,MAAM,CAACsB,GAAG,CAAC,MAAM,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAAC,aAAa,CAAC,CAAC;IACjE,CAAC,EACAC,GAAG,IAAI;MACNJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CACF;EACH;;;mBAxCW5B,mBAAmB;AAAA;;QAAnBA,mBAAmB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,8BAA6C;MAERA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACpDD,8BAAwB;MACfA,0BAAU;MAAAA,iBAAQ;MACzBA,2BAKE;MACJA,iBAAM;MAENA,8BAAwB;MACfA,yBAAS;MAAAA,iBAAQ;MACxBA,4BAKE;MACJA,iBAAM;MAENA,+BAAwB;MACfA,sBAAK;MAAAA,iBAAQ;MACpBA,4BAKE;MACJA,iBAAM;MACNA,sBAAI;MACJA,+BAAwB;MACkCA,uBAAM;MAAAA,iBAAS;;;MAhCrEA,eAAwB;MAAxBA,0CAAwB","names":["UserDetailComponent","constructor","formBuilder","router","ngZone","activatedRoute","crudService","getId","snapshot","paramMap","get","GetUser","subscribe","res","updateForm","setValue","firstName","lastName","email","group","ngOnInit","onUpdate","updateUser","value","console","log","run","navigateByUrl","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\user-detail\\user-detail.component.ts","C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\user-detail\\user-detail.component.html"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CrudService } from '../../service/crud.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  \r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  getId: any;\r\n  updateForm: FormGroup;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    private activatedRoute: ActivatedRoute,\r\n    private crudService: CrudService\r\n  ) {\r\n    this.getId = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.crudService.GetUser(this.getId).subscribe((res: { [x: string]: any; }) => {\r\n      this.updateForm.setValue({\r\n        firstName: res['firstName'],\r\n        lastName: res['lastName'],\r\n        email: res['email'],\r\n      });\r\n    });\r\n\r\n    this.updateForm = this.formBuilder.group({\r\n      firstName: [''],\r\n      lastName: [''],\r\n      email: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onUpdate(): any {\r\n    this.crudService.updateUser(this.getId, this.updateForm.value).subscribe(\r\n      () => {\r\n        console.log('Data updated successfully!');\r\n        this.ngZone.run(() => this.router.navigateByUrl('/users-list'));\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}","<div class=\"row justify-content-center mt-5\">\r\n    <div class=\"col-md-4\">\r\n      <form [formGroup]=\"updateForm\" (ngSubmit)=\"onUpdate()\">\r\n        <div class=\"form-group\">\r\n          <label>First Name</label>\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            formControlName=\"firstName\"\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label>Last Name</label>\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            formControlName=\"lastName\"\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            formControlName=\"email\"\r\n            required\r\n          />\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\" type=\"submit\">Update</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}