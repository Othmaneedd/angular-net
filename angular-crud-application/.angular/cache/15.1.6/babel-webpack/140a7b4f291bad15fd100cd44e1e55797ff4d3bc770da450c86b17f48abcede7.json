{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  //   REST_API: string = 'http://localhost:9080/api/v1';\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9080/api/v1'; // Remplacez par votre API réelle\n  }\n\n  GetUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  updateUser(id, updatedUser) {\n    return this.http.put(`${this.apiUrl}/${id}`, updatedUser);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAqFA,OAAM,MAAOA,WAAW;EAEtB;EAGAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,WAAM,GAAG,8BAA8B,CAAC,CAAC;EAIV;;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,MAAM,CAAC;EACxC;EAEAC,UAAU,CAACC,EAAU,EAAEC,WAAgB;IACrC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,IAAIE,EAAE,EAAE,EAAEC,WAAW,CAAC;EAC3D;EAEAE,UAAU,CAACH,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACS,MAAM,CAAC,GAAG,IAAI,CAACN,MAAM,IAAIE,EAAE,EAAE,CAAC;EACjD;;;mBAjBWP,WAAW;AAAA;;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["CrudService","constructor","http","GetUsers","get","apiUrl","updateUser","id","updatedUser","put","deleteUser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\service\\crud.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\r\n// import { User } from './User';\r\n// import { catchError, map } from 'rxjs/operators';\r\n// import { Observable, throwError } from 'rxjs';\r\n// import {\r\n//   HttpClient,\r\n//   HttpHeaders,\r\n//   HttpErrorResponse,\r\n// } from '@angular/common/http';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root',\r\n// })\r\n// export class CrudService {\r\n \r\n//   REST_API: string = 'http://localhost:9080/api/v1';\r\n\r\n//   // Http Header\r\n//   httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n//   constructor(private httpClient: HttpClient) {}\r\n\r\n//   // Add\r\n//   AddUser(data: User): Observable<any> {\r\n//     let API_URL = `${this.REST_API}/users`;\r\n//     return this.httpClient\r\n//       .post(API_URL, data)\r\n//       .pipe(catchError(this.handleError));\r\n//   }\r\n\r\n//   // Get all objects\r\n//   GetUsers() {\r\n//     return this.httpClient.get(`${this.REST_API}/users`);\r\n//   }\r\n\r\n//   // Get single object\r\n//   GetUser(id: any): Observable<any> {\r\n//     let API_URL = `${this.REST_API}/users/${id}`;\r\n//     return this.httpClient.get(API_URL, { headers: this.httpHeaders }).pipe(\r\n//       map((res: any) => {\r\n//         return res || {};\r\n//       }),\r\n//       catchError(this.handleError)\r\n//     );\r\n//   }\r\n\r\n//   // Update\r\n//   updateUser(id: any, data: any): Observable<any> {\r\n//     let API_URL = `${this.REST_API}/users/${id}`;\r\n//     return this.httpClient\r\n//       .put(API_URL, data, { headers: this.httpHeaders })\r\n//       .pipe(catchError(this.handleError));\r\n//   }\r\n\r\n//   // Delete\r\n//   deleteUser(id: any): Observable<any> {\r\n//     let API_URL = `${this.REST_API}/users/${id}`;\r\n//     return this.httpClient\r\n//       .delete(API_URL, { headers: this.httpHeaders })\r\n//       .pipe(catchError(this.handleError));\r\n//   }\r\n\r\n//   // Error\r\n//   handleError(error: HttpErrorResponse) {\r\n//     let errorMessage = '';\r\n//     if (error.error instanceof ErrorEvent) {\r\n//       // Handle client error\r\n//       errorMessage = error.error.message;\r\n//     } else {\r\n//       // Handle server error\r\n//       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n//     }\r\n//     console.log(errorMessage);\r\n//     return throwError(() => {\r\n//       errorMessage;\r\n//     });\r\n//   }\r\n// }\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n  private apiUrl = 'http://localhost:9080/api/v1'; // Remplacez par votre API réelle\r\n  //   REST_API: string = 'http://localhost:9080/api/v1';\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  GetUsers(): Observable<any> {\r\n    return this.http.get<any>(this.apiUrl);\r\n  }\r\n\r\n  updateUser(id: number, updatedUser: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${id}`, updatedUser);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}