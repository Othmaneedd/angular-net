{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.message = '';\n  }\n  login() {\n    this.loginService.login(this.username, this.password).subscribe({\n      next: () => {\n        this.message = 'Connexion réussie';\n        this.router.navigate(['/']); // ou toute autre page de ton choix après connexion\n      },\n\n      error: () => {\n        this.message = 'Nom d’utilisateur ou mot de passe incorrect';\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"form-group\"], [\"placeholder\", \"Nom d'utilisateur\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mt-2\"], [\"type\", \"password\", \"placeholder\", \"Mot de passe\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [1, \"text-danger\", \"mt-2\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\");\n      i0.ɵɵtext(5, \"Nom d'utilisateur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n      i0.ɵɵtext(9, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(12, \"Se connecter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IAJ9D,aAAQ,GAAG,EAAE;IACb,aAAQ,GAAG,EAAE;IACb,YAAO,GAAG,EAAE;EAE6D;EAEzEC,KAAK;IACH,IAAI,CAACF,YAAY,CAACE,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAC;MAC9DC,IAAI,EAAE,MAAK;QACT,IAAI,CAACC,OAAO,GAAG,mBAAmB;QAClC,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC;;MACDC,KAAK,EAAE,MAAK;QACV,IAAI,CAACF,OAAO,GAAG,6CAA6C;MAC9D;KACD,CAAC;EACJ;;;mBAjBWT,cAAc;AAAA;;QAAdA,cAAc;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,8BAA4B;MACtBA,yBAAS;MAAAA,iBAAK;MAClBA,8BAAwB;MACfA,iCAAiB;MAAAA,iBAAQ;MAChCA,gCAAqF;MAAzBA;QAAA;MAAA,EAAsB;MAAlFA,iBAAqF;MAEvFA,8BAA6B;MACpBA,4BAAY;MAAAA,iBAAQ;MAC3BA,iCAAgG;MAAzBA;QAAA;MAAA,EAAsB;MAA7FA,iBAAgG;MAElGA,kCAAuD;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,6BAAY;MAAAA,iBAAS;MAC5EA,+BAA8B;MAAAA,aAAa;MAAAA,iBAAM;;;MAPaA,eAAsB;MAAtBA,sCAAsB;MAIXA,eAAsB;MAAtBA,sCAAsB;MAGjEA,eAAa;MAAbA,iCAAa","names":["LoginComponent","constructor","loginService","router","login","username","password","subscribe","next","message","navigate","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\login\\login.component.ts","C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n  message = '';\n\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  login() {\n    this.loginService.login(this.username, this.password).subscribe({\n      next: () => {\n        this.message = 'Connexion réussie';\n        this.router.navigate(['/']); // ou toute autre page de ton choix après connexion\n      },\n      error: () => {\n        this.message = 'Nom d’utilisateur ou mot de passe incorrect';\n      }\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <h2>Connexion</h2>\n  <div class=\"form-group\">\n    <label>Nom d'utilisateur</label>\n    <input class=\"form-control\" placeholder=\"Nom d'utilisateur\" [(ngModel)]=\"username\" />\n  </div>\n  <div class=\"form-group mt-2\">\n    <label>Mot de passe</label>\n    <input class=\"form-control\" type=\"password\" placeholder=\"Mot de passe\" [(ngModel)]=\"password\" />\n  </div>\n  <button class=\"btn btn-primary mt-3\" (click)=\"login()\">Se connecter</button>\n  <div class=\"text-danger mt-2\">{{ message }}</div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}