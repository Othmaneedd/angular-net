{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://your-api-url.com/users'; // Remplacez par votre API réelle\n  }\n\n  GetUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  updateUser(id, updatedUser) {\n    return this.http.put(`${this.apiUrl}/${id}`, updatedUser);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,MAAM,CAAC;EACxC;EAEAC,UAAU,CAACC,EAAU,EAAEC,WAAgB;IACrC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,IAAIE,EAAE,EAAE,EAAEC,WAAW,CAAC;EAC3D;EAEAE,UAAU,CAACH,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACS,MAAM,CAAC,GAAG,IAAI,CAACN,MAAM,IAAIE,EAAE,EAAE,CAAC;EACjD;;;mBAfWP,WAAW;AAAA;;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["CrudService","constructor","http","GetUsers","get","apiUrl","updateUser","id","updatedUser","put","deleteUser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\service\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n  private apiUrl = 'https://your-api-url.com/users'; // Remplacez par votre API réelle\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  GetUsers(): Observable<any> {\r\n    return this.http.get<any>(this.apiUrl);\r\n  }\r\n\r\n  updateUser(id: number, updatedUser: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${id}`, updatedUser);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}