{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/crud.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction UsersListComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"First Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Last Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.selectedUser.firstName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.selectedUser.lastName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.selectedUser.email, \"\");\n  }\n}\nexport class UsersListComponent {\n  constructor(crudService, fb) {\n    this.crudService = crudService;\n    this.fb = fb;\n    this.Users = [];\n    this.searchText = '';\n    this.sortColumn = '';\n    this.sortDirection = 'asc';\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.crudService.GetUsers().subscribe(res => {\n      this.Users = res;\n    });\n    this.editForm = this.fb.group({\n      id: [''],\n      firstName: [''],\n      lastName: [''],\n      email: ['']\n    });\n  }\n  openDetails(user) {\n    this.selectedUser = user;\n    const detailsModal = new bootstrap.Modal(document.getElementById('detailsModal'));\n    detailsModal.show();\n  }\n  openEdit(user) {\n    this.editForm.patchValue(user);\n    const editModal = new bootstrap.Modal(document.getElementById('editModal'));\n    editModal.show();\n  }\n  submitEdit() {\n    const updatedUser = this.editForm.value;\n    this.crudService.updateUser(updatedUser.id, updatedUser).subscribe(() => {\n      const index = this.Users.findIndex(u => u.id === updatedUser.id);\n      if (index !== -1) {\n        this.Users[index] = updatedUser;\n      }\n      bootstrap.Modal.getInstance(document.getElementById('editModal'))?.hide();\n    });\n  }\n  delete(id, i) {\n    if (window.confirm('Do you want to go ahead?')) {\n      this.crudService.deleteUser(id).subscribe(() => {\n        this.Users.splice(i, 1);\n      });\n    }\n  }\n  sortBy(column) {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n  }\n  get paginatedUsers() {\n    let filtered = this.Users.filter(user => Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase()));\n    if (this.sortColumn) {\n      filtered = filtered.sort((a, b) => {\n        const aVal = a[this.sortColumn]?.toString().toLowerCase();\n        const bVal = b[this.sortColumn]?.toString().toLowerCase();\n        return this.sortDirection === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);\n      });\n    }\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    return filtered.slice(start, start + this.itemsPerPage);\n  }\n  get totalPages() {\n    const filteredLength = this.Users.filter(user => Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase())).length;\n    return Math.ceil(filteredLength / this.itemsPerPage);\n  }\n  changePage(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  }\n}\nUsersListComponent.ɵfac = function UsersListComponent_Factory(t) {\n  return new (t || UsersListComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nUsersListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersListComponent,\n  selectors: [[\"app-users-list\"]],\n  decls: 36,\n  vars: 2,\n  consts: [[\"id\", \"editModal\", \"tabindex\", \"-1\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\", 3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"formControlName\", \"firstName\", 1, \"form-control\"], [\"formControlName\", \"lastName\", 1, \"form-control\"], [\"formControlName\", \"email\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"id\", \"detailsModal\", \"tabindex\", \"-1\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-content\"], [\"class\", \"modal-body\", 4, \"ngIf\"]],\n  template: function UsersListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UsersListComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.submitEdit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \"Edit User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"button\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"label\");\n      i0.ɵɵtext(10, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\");\n      i0.ɵɵtext(14, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\");\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Save Changes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 13);\n      i0.ɵɵtext(24, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(25, \"div\", 14)(26, \"div\", 1)(27, \"div\", 15)(28, \"div\", 3)(29, \"h5\", 4);\n      i0.ɵɵtext(30, \"User Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"button\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, UsersListComponent_div_32_Template, 13, 3, \"div\", 16);\n      i0.ɵɵelementStart(33, \"div\", 11)(34, \"button\", 13);\n      i0.ɵɵtext(35, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedUser);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".app-container[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  display: flex;\\n  font-family: \\\"Segoe UI\\\", sans-serif;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  width: 220px;\\n  background-color: #173e43;\\n  color: white;\\n  min-height: 100vh;\\n}\\n.sidebar[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  font-size: 20px;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n.sidebar[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%] {\\n  color: #bcd;\\n  padding: 10px 0;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n.sidebar[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], .sidebar[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover {\\n  color: white;\\n  background-color: #206a5d;\\n  border-radius: 5px;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  width: 100%;\\n}\\n\\n.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  margin-right: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91c2Vycy1saXN0L3VzZXJzLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFDRjtBQUNFO0VBQ0UsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsU0FBQTtBQUNKO0FBRUU7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7QUFBSjtBQUVJO0VBQ0UsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7QUFBTjs7QUFLQTtFQUNFLG1CQUFBO0VBQ0EsV0FBQTtBQUZGOztBQUtBO0VBQ0UsZUFBQTtBQUZGOztBQUtBO0VBQ0UsaUJBQUE7QUFGRiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi5zaWRlYmFyIHtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE3M2U0MztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcblxyXG4gIC5sb2dvIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBnYXA6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAubmF2LWxpbmsge1xyXG4gICAgY29sb3I6ICNiY2Q7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMTBweDtcclxuXHJcbiAgICAmLmFjdGl2ZSwgJjpob3ZlciB7XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIwNmE1ZDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQ6ICNmOGY5ZmE7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi50YWJsZSB0aCB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b24gaSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UsersListComponent","constructor","crudService","fb","ngOnInit","GetUsers","subscribe","res","Users","editForm","group","id","firstName","lastName","email","openDetails","user","selectedUser","detailsModal","bootstrap","Modal","document","getElementById","show","openEdit","patchValue","editModal","submitEdit","updatedUser","value","updateUser","index","findIndex","u","getInstance","hide","delete","i","window","confirm","deleteUser","splice","sortBy","column","sortColumn","sortDirection","paginatedUsers","filtered","filter","Object","values","join","toLowerCase","includes","searchText","sort","a","b","aVal","toString","bVal","localeCompare","start","currentPage","itemsPerPage","slice","totalPages","filteredLength","length","Math","ceil","changePage","page","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.html","C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.ts"],"sourcesContent":["<!-- Edit Modal -->\r\n<div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <form [formGroup]=\"editForm\" (ngSubmit)=\"submitEdit()\" class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Edit User</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"mb-3\">\r\n          <label>First Name</label>\r\n          <input class=\"form-control\" formControlName=\"firstName\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label>Last Name</label>\r\n          <input class=\"form-control\" formControlName=\"lastName\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label>Email</label>\r\n          <input class=\"form-control\" formControlName=\"email\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<!-- Details Modal -->\r\n<div class=\"modal fade\" id=\"detailsModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">User Details</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\" *ngIf=\"selectedUser\">\r\n        <p><strong>First Name:</strong> {{ selectedUser.firstName }}</p>\r\n        <p><strong>Last Name:</strong> {{ selectedUser.lastName }}</p>\r\n        <p><strong>Email:</strong> {{ selectedUser.email }}</p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../../service/crud.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n  Users: any[] = [];\r\n  searchText = '';\r\n  sortColumn = '';\r\n  sortDirection: 'asc' | 'desc' = 'asc';\r\n\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n\r\n  selectedUser: any = null;\r\n  editForm!: FormGroup;\r\n\r\n  constructor(private crudService: CrudService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.crudService.GetUsers().subscribe((res: any) => {\r\n      this.Users = res;\r\n    });\r\n\r\n    this.editForm = this.fb.group({\r\n      id: [''],\r\n      firstName: [''],\r\n      lastName: [''],\r\n      email: ['']\r\n    });\r\n  }\r\n\r\n  openDetails(user: any) {\r\n    this.selectedUser = user;\r\n    const detailsModal = new bootstrap.Modal(document.getElementById('detailsModal')!);\r\n    detailsModal.show();\r\n  }\r\n\r\n  openEdit(user: any) {\r\n    this.editForm.patchValue(user);\r\n    const editModal = new bootstrap.Modal(document.getElementById('editModal')!);\r\n    editModal.show();\r\n  }\r\n\r\n  submitEdit() {\r\n    const updatedUser = this.editForm.value;\r\n    this.crudService.updateUser(updatedUser.id, updatedUser).subscribe(() => {\r\n      const index = this.Users.findIndex(u => u.id === updatedUser.id);\r\n      if (index !== -1) {\r\n        this.Users[index] = updatedUser;\r\n      }\r\n      bootstrap.Modal.getInstance(document.getElementById('editModal')!)?.hide();\r\n    });\r\n  }\r\n\r\n  delete(id: any, i: any) {\r\n    if (window.confirm('Do you want to go ahead?')) {\r\n      this.crudService.deleteUser(id).subscribe(() => {\r\n        this.Users.splice(i, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  sortBy(column: string) {\r\n    if (this.sortColumn === column) {\r\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortColumn = column;\r\n      this.sortDirection = 'asc';\r\n    }\r\n  }\r\n\r\n  get paginatedUsers() {\r\n    let filtered = this.Users.filter(user =>\r\n      Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase())\r\n    );\r\n\r\n    if (this.sortColumn) {\r\n      filtered = filtered.sort((a, b) => {\r\n        const aVal = a[this.sortColumn]?.toString().toLowerCase();\r\n        const bVal = b[this.sortColumn]?.toString().toLowerCase();\r\n        return this.sortDirection === 'asc'\r\n          ? aVal.localeCompare(bVal)\r\n          : bVal.localeCompare(aVal);\r\n      });\r\n    }\r\n\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    return filtered.slice(start, start + this.itemsPerPage);\r\n  }\r\n\r\n  get totalPages() {\r\n    const filteredLength = this.Users.filter(user =>\r\n      Object.values(user).join(' ').toLowerCase().includes(this.searchText.toLowerCase())\r\n    ).length;\r\n    return Math.ceil(filteredLength / this.itemsPerPage);\r\n  }\r\n\r\n  changePage(page: number) {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}