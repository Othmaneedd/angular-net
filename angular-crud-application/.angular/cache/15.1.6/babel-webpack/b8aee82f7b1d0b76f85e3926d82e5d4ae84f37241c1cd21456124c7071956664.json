{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/crud.service\";\nfunction UsersListComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 5)(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UsersListComponent_tr_17_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showDetails(user_r2));\n    });\n    i0.ɵɵtext(9, \"\\u00C9diter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function UsersListComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const user_r2 = restoredCtx.$implicit;\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.delete(user_r2.id, i_r3));\n    });\n    i0.ɵɵtext(11, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.email);\n  }\n}\nfunction UsersListComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h5\");\n    i0.ɵɵtext(2, \"D\\u00E9tails / \\u00C9dition\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\")(4, \"div\", 11)(5, \"label\");\n    i0.ɵɵtext(6, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function UsersListComponent_div_18_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedUser.firstName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 11)(9, \"label\");\n    i0.ɵɵtext(10, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function UsersListComponent_div_18_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.selectedUser.lastName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\");\n    i0.ɵɵtext(14, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function UsersListComponent_div_18_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.selectedUser.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function UsersListComponent_div_18_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.updateSelectedUser());\n    });\n    i0.ɵɵtext(17, \"Mettre \\u00E0 jour\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UsersListComponent_div_18_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.clearDetails());\n    });\n    i0.ɵɵtext(19, \"Fermer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedUser.firstName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedUser.lastName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedUser.email);\n  }\n}\nexport class UsersListComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.Users = [];\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.getAllUsers();\n  }\n  getAllUsers() {\n    this.crudService.GetUsers().subscribe(res => {\n      this.Users = res;\n    });\n  }\n  delete(id, i) {\n    if (window.confirm('Do you want to delete this user?')) {\n      this.crudService.deleteUser(id).subscribe(() => {\n        this.Users.splice(i, 1);\n      });\n    }\n  }\n  showDetails(user) {\n    this.selectedUser = {\n      ...user\n    }; // clone pour ne pas modifier directement\n  }\n\n  clearDetails() {\n    this.selectedUser = null;\n  }\n  updateSelectedUser() {\n    if (!this.selectedUser?.id) return;\n    this.crudService.updateUser(this.selectedUser.id, this.selectedUser).subscribe(() => {\n      const index = this.Users.findIndex(u => u.id === this.selectedUser.id);\n      if (index !== -1) {\n        this.Users[index] = {\n          ...this.selectedUser\n        };\n      }\n      alert('Utilisateur mis à jour avec succès !');\n      this.clearDetails();\n    });\n  }\n}\nUsersListComponent.ɵfac = function UsersListComponent_Factory(t) {\n  return new (t || UsersListComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n};\nUsersListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersListComponent,\n  selectors: [[\"app-users-list\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"pt-3\", \"pb-2\", \"mb-3\", \"border-bottom\"], [1, \"h2\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"card mt-4 p-4 shadow-sm bg-light\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"card\", \"mt-4\", \"p-4\", \"shadow-sm\", \"bg-light\"], [1, \"form-group\", \"mb-2\"], [\"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"mt-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-2\", \"ms-2\", 3, \"click\"]],\n  template: function UsersListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Users Collection\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 5);\n      i0.ɵɵtext(15, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, UsersListComponent_tr_17_Template, 12, 3, \"tr\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, UsersListComponent_div_18_Template, 20, 3, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Users);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedUser);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UsersListComponent","constructor","crudService","ngOnInit","getAllUsers","GetUsers","subscribe","res","Users","delete","id","i","window","confirm","deleteUser","splice","showDetails","user","selectedUser","clearDetails","updateSelectedUser","updateUser","index","findIndex","u","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.html","C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.ts"],"sourcesContent":["<div class=\"container\">\r\n  <div class=\"d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n    <h2 class=\"h2\">Users Collection</h2>\r\n  </div>\r\n\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Email</th>\r\n          <th class=\"text-center\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of Users; let i = index\">\r\n          <td>{{ user.firstName }}</td>\r\n          <td>{{ user.lastName }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td class=\"text-center\">\r\n            <button class=\"btn btn-sm btn-primary\" (click)=\"showDetails(user)\">Éditer</button>\r\n            <button class=\"btn btn-sm btn-danger\" (click)=\"delete(user.id, i)\">Supprimer</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Formulaire d’édition affiché dynamiquement -->\r\n  <div *ngIf=\"selectedUser\" class=\"card mt-4 p-4 shadow-sm bg-light\">\r\n    <h5>Détails / Édition</h5>\r\n\r\n    <form>\r\n      <div class=\"form-group mb-2\">\r\n        <label>First Name</label>\r\n        <input class=\"form-control\" [(ngModel)]=\"selectedUser.firstName\" name=\"firstName\" />\r\n      </div>\r\n      <div class=\"form-group mb-2\">\r\n        <label>Last Name</label>\r\n        <input class=\"form-control\" [(ngModel)]=\"selectedUser.lastName\" name=\"lastName\" />\r\n      </div>\r\n      <div class=\"form-group mb-2\">\r\n        <label>Email</label>\r\n        <input class=\"form-control\" [(ngModel)]=\"selectedUser.email\" name=\"email\" />\r\n      </div>\r\n\r\n      <button type=\"button\" class=\"btn btn-success mt-2\" (click)=\"updateSelectedUser()\">Mettre à jour</button>\r\n      <button type=\"button\" class=\"btn btn-secondary mt-2 ms-2\" (click)=\"clearDetails()\">Fermer</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../../service/crud.service';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss'],\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n  Users: any[] = [];\r\n  selectedUser: any = null;\r\n\r\n  constructor(private crudService: CrudService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllUsers();\r\n  }\r\n\r\n  getAllUsers(): void {\r\n    this.crudService.GetUsers().subscribe((res: any) => {\r\n      this.Users = res;\r\n    });\r\n  }\r\n\r\n  delete(id: number, i: number): void {\r\n    if (window.confirm('Do you want to delete this user?')) {\r\n      this.crudService.deleteUser(id).subscribe(() => {\r\n        this.Users.splice(i, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  showDetails(user: any): void {\r\n    this.selectedUser = { ...user }; // clone pour ne pas modifier directement\r\n  }\r\n\r\n  clearDetails(): void {\r\n    this.selectedUser = null;\r\n  }\r\n\r\n  updateSelectedUser(): void {\r\n    if (!this.selectedUser?.id) return;\r\n\r\n    this.crudService.updateUser(this.selectedUser.id, this.selectedUser).subscribe(() => {\r\n      const index = this.Users.findIndex((u) => u.id === this.selectedUser.id);\r\n      if (index !== -1) {\r\n        this.Users[index] = { ...this.selectedUser };\r\n      }\r\n      alert('Utilisateur mis à jour avec succès !');\r\n      this.clearDetails();\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}