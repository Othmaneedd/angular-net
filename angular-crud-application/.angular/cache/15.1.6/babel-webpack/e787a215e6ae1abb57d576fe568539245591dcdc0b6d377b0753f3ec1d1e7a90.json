{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimpo;\nlet UserListComponent = class UserListComponent {\n  constructor() {\n    this.users = [{\n      id: 1,\n      name: 'John Doe',\n      email: 'john.doe@example.com'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      email: 'jane.smith@example.com'\n    }, {\n      id: 3,\n      name: 'Michael Brown',\n      email: 'michael.brown@example.com'\n    }, {\n      id: 4,\n      name: 'Emily Johnson',\n      email: 'emily.johnson@example.com'\n    }];\n    this.searchText = '';\n    this.sortColumn = 'id';\n    this.sortDirection = 'asc';\n  }\n  filteredUsers() {\n    let filtered = this.users.filter(user => user.name.toLowerCase().includes(this.searchText.toLowerCase()) || user.email.toLowerCase().includes(this.searchText.toLowerCase()));\n    return filtered.sort((a, b) => {\n      const valueA = a[this.sortColumn];\n      const valueB = b[this.sortColumn];\n      const comparison = typeof valueA === 'string' ? valueA.localeCompare(valueB) : valueA - valueB;\n      return this.sortDirection === 'asc' ? comparison : -comparison;\n    });\n  }\n  sortBy(column) {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n  }\n  sortIcon(column) {\n    if (this.sortColumn !== column) return '';\n    return this.sortDirection === 'asc' ? '&#9650;' : '&#9660;';\n  }\n  viewUser(user) {\n    alert(`Détails de l'utilisateur:\\n${JSON.stringify(user, null, 2)}`);\n  }\n  editUser(user) {\n    alert(`Modifier l'utilisateur:\\n${JSON.stringify(user, null, 2)}`);\n  }\n  deleteUser(user) {\n    if (confirm(`Supprimer ${user.name} ?`)) {\n      this.users = this.users.filter(u => u.id !== user.id);\n    }\n  }\n  addUser() {\n    const id = this.users.length + 1;\n    const newUser = {\n      id,\n      name: `Nouvel Utilisateur ${id}`,\n      email: `nouveau${id}@exemple.com`\n    };\n    this.users.push(newUser);\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})], UserListComponent);\nexport { UserListComponent };","map":{"version":3,"mappings":"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","names":["Component","impo","UserListComponent","constructor","id","name","email","filteredUsers","filtered","users","filter","user","toLowerCase","includes","searchText","sort","a","b","valueA","sortColumn","valueB","comparison","localeCompare","sortDirection","sortBy","column","sortIcon","viewUser","alert","JSON","stringify","editUser","deleteUser","confirm","u","addUser","length","newUser","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\DELL\\dotnet-sqlserver-angular15-crud\\angular-crud-application\\src\\app\\components\\users-list\\users-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimpo\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent {\r\n  users: User[] = [\r\n    { id: 1, name: 'John Doe', email: 'john.doe@example.com' },\r\n    { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com' },\r\n    { id: 3, name: 'Michael Brown', email: 'michael.brown@example.com' },\r\n    { id: 4, name: 'Emily Johnson', email: 'emily.johnson@example.com' }\r\n  ];\r\n\r\n  searchText = '';\r\n  sortColumn: keyof User = 'id';\r\n  sortDirection: 'asc' | 'desc' = 'asc';\r\n\r\n  filteredUsers(): User[] {\r\n    let filtered = this.users.filter(user =>\r\n      user.name.toLowerCase().includes(this.searchText.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(this.searchText.toLowerCase())\r\n    );\r\n\r\n    return filtered.sort((a, b) => {\r\n      const valueA = a[this.sortColumn];\r\n      const valueB = b[this.sortColumn];\r\n      const comparison = typeof valueA === 'string'\r\n        ? valueA.localeCompare(valueB as string)\r\n        : (valueA as number) - (valueB as number);\r\n\r\n      return this.sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  }\r\n\r\n  sortBy(column: keyof User): void {\r\n    if (this.sortColumn === column) {\r\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortColumn = column;\r\n      this.sortDirection = 'asc';\r\n    }\r\n  }\r\n\r\n  sortIcon(column: keyof User): string {\r\n    if (this.sortColumn !== column) return '';\r\n    return this.sortDirection === 'asc' ? '&#9650;' : '&#9660;';\r\n  }\r\n\r\n  viewUser(user: User): void {\r\n    alert(`Détails de l'utilisateur:\\n${JSON.stringify(user, null, 2)}`);\r\n  }\r\n\r\n  editUser(user: User): void {\r\n    alert(`Modifier l'utilisateur:\\n${JSON.stringify(user, null, 2)}`);\r\n  }\r\n\r\n  deleteUser(user: User): void {\r\n    if (confirm(`Supprimer ${user.name} ?`)) {\r\n      this.users = this.users.filter(u => u.id !== user.id);\r\n    }\r\n  }\r\n\r\n  addUser(): void {\r\n    const id = this.users.length + 1;\r\n    const newUser: User = {\r\n      id,\r\n      name: `Nouvel Utilisateur ${id}`,\r\n      email: `nouveau${id}@exemple.com`\r\n    };\r\n    this.users.push(newUser);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}